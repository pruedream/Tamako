(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{426:function(t,e,s){"use strict";s.r(e);var a=s(4),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[t._v("#")]),t._v(" 连接")]),t._v(" "),e("h3",{attrs:{id:"左连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#左连接"}},[t._v("#")]),t._v(" 左连接")]),t._v(" "),e("h3",{attrs:{id:"右连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#右连接"}},[t._v("#")]),t._v(" 右连接")]),t._v(" "),e("h3",{attrs:{id:"等值连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#等值连接"}},[t._v("#")]),t._v(" 等值连接")]),t._v(" "),e("h2",{attrs:{id:"分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),e("p",[t._v("分组的需求体现在：需要按照某一个字段将数据进行分组以方便获取到一些数据，比如说使用count()算数量，还可以更进一步，比如使用获取到的数据过滤掉一些组，打个比方统开课数量>5的老师的name.")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" teacher_id "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" subject_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" cnt\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Teacher \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" teacher_id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" cnt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n按照老师分组以使用count获取老师的开课数量"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("再根据开课数量过滤掉"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("的老师，也就是过滤掉了"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("的组\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("code",[t._v("GROUP BY")]),t._v("与"),e("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-min.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIN"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-max.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAX"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-avg.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AVG"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-sum.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SUM"),e("OutboundLink")],1),t._v("或"),e("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-count.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("COUNT"),e("OutboundLink")],1),t._v("等聚合函数结合使用，以计算"),e("strong",[t._v("为每个分组")]),t._v("提供信息的度量。  注意计算的是每个分组的")]),t._v(" "),e("p",[t._v("如果要在分组之前过滤行，请添加"),e("code",[t._v("WHERE")]),t._v("子句。过滤完行之后，需要对每个分组自己进行过滤使用HAVING")]),t._v(" "),e("p",[t._v("也就是说 where是用于分组前过滤行的，HAVING是用于分组后，按条件过滤掉某些分组")]),t._v(" "),e("p",[t._v("group by  所使用的条件字段必须在select 查询的字段中存在")]),t._v(" "),e("p",[t._v("group by  后接上order by 是为"),e("strong",[t._v("每个分组单独")]),t._v("进行内部的排序，不是所有数据")]),t._v(" "),e("h2",{attrs:{id:"排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),e("p",[t._v("order by 字段   升序    加desc是降序")]),t._v(" "),e("h2",{attrs:{id:"聚合函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),e("p",[t._v("count（*）"),e("code",[t._v("COUNT(*)")]),t._v("函数返回由"),e("a",{attrs:{href:"http://www.yiibai.com/mysql/select-statement-query-data.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SELECT"),e("OutboundLink")],1),t._v("语句返回的结果集中的行数。"),e("code",[t._v("COUNT(*)")]),t._v("函数计算包含"),e("code",[t._v("NULL")]),t._v("和非"),e("code",[t._v("NULL")]),t._v("值的行，即：所有行。")]),t._v(" "),e("p",[e("code",[t._v("COUNT(expression)")]),t._v("返回不包含"),e("code",[t._v("NULL")]),t._v("值的行数。")]),t._v(" "),e("p",[e("code",[t._v("MySQL COUNT(DISTINCT expression)")]),t._v("返回不包含"),e("code",[t._v("NULL")]),t._v("值的唯一行数。")])])}),[],!1,null,null,null);e.default=r.exports}}]);