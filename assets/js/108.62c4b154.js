(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{429:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[t._v("#")]),t._v(" 连接")]),t._v(" "),s("h3",{attrs:{id:"左连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左连接"}},[t._v("#")]),t._v(" 左连接")]),t._v(" "),s("h3",{attrs:{id:"右连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#右连接"}},[t._v("#")]),t._v(" 右连接")]),t._v(" "),s("h3",{attrs:{id:"等值连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#等值连接"}},[t._v("#")]),t._v(" 等值连接")]),t._v(" "),s("h2",{attrs:{id:"分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),s("p",[t._v("分组的需求体现在：需要按照某一个字段将数据进行分组以方便获取到一些数据，比如说使用count()算数量，还可以更进一步，比如使用获取到的数据过滤掉一些组，打个比方统开课数量>5的老师的name.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" teacher_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" subject_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" cnt\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Teacher \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" teacher_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" cnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n按照老师分组以使用count获取老师的开课数量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("再根据开课数量过滤掉"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("的老师，也就是过滤掉了"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("的组\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("code",[t._v("GROUP BY")]),t._v("与"),s("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-min.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIN"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-max.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAX"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-avg.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AVG"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-sum.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SUM"),s("OutboundLink")],1),t._v("或"),s("a",{attrs:{href:"http://www.yiibai.com/sql/sql-aggregate-functions/sql-count.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("COUNT"),s("OutboundLink")],1),t._v("等聚合函数结合使用，以计算"),s("strong",[t._v("为每个分组")]),t._v("提供信息的度量。  注意计算的是每个分组的")]),t._v(" "),s("p",[t._v("如果要在分组之前过滤行，请添加"),s("code",[t._v("WHERE")]),t._v("子句。过滤完行之后，需要对每个分组自己进行过滤使用HAVING")]),t._v(" "),s("p",[t._v("也就是说 where是用于分组前过滤行的，HAVING是用于分组后，按条件过滤掉某些分组")]),t._v(" "),s("p",[t._v("group by  所使用的条件字段必须在select 查询的字段中存在")]),t._v(" "),s("p",[t._v("group by  "),s("strong",[t._v("后接上order by 是对组的排序（不是对组内的数据，而是对所有的组），所有的组会按照order by的条件排好序")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SELECT")]),t._v(" \n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    department_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("employee_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" headcount\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FROM")]),t._v("\n    employees e\n        "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INNER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JOIN")]),t._v("\n    departments d "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ON")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BY")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BY")]),t._v(" headcount "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更多请阅读：https://www.yiibai.com/sql/sql-group-by.html")]),t._v("\n\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("p",[t._v("order by 字段   升序    加desc是降序")]),t._v(" "),s("h2",{attrs:{id:"聚合函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[t._v("#")]),t._v(" 聚合函数")]),t._v(" "),s("p",[t._v("count（*）"),s("code",[t._v("COUNT(*)")]),t._v("函数返回由"),s("a",{attrs:{href:"http://www.yiibai.com/mysql/select-statement-query-data.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SELECT"),s("OutboundLink")],1),t._v("语句返回的结果集中的行数。"),s("code",[t._v("COUNT(*)")]),t._v("函数计算包含"),s("code",[t._v("NULL")]),t._v("和非"),s("code",[t._v("NULL")]),t._v("值的行，即：所有行。")]),t._v(" "),s("p",[s("code",[t._v("COUNT(expression)")]),t._v("返回不包含"),s("code",[t._v("NULL")]),t._v("值的行数。")]),t._v(" "),s("p",[s("code",[t._v("MySQL COUNT(DISTINCT expression)")]),t._v("返回不包含"),s("code",[t._v("NULL")]),t._v("值的唯一行数。")])])}),[],!1,null,null,null);s.default=e.exports}}]);