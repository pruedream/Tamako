(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{408:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mvcc多版本并发控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvcc多版本并发控制"}},[t._v("#")]),t._v(" MVCC多版本并发控制")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[s("strong",[t._v("快照读")]),t._v("（一致性非锁定读）就是单纯（普通）的 "),s("code",[t._v("SELECT")]),t._v(" 语句，不加锁但不包括下面这两类 "),s("code",[t._v("SELECT")]),t._v(" 语句：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 共享锁 可以在 MySQL 5.7 和 MySQL 8.0 中使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 共享锁 可以在 MySQL 8.0 中使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("快照即记录的历史版本，每行记录可能存在多个历史版本（多版本技术）。")]),t._v(" "),s("p",[t._v("快照读的情况下，如果读取的记录正在执行 UPDATE/DELETE 操作，读取操作不会因此去等待记录上 X 锁的释放，而是会去读取行的一个快照。")]),t._v(" "),s("p",[t._v("**读未提交的普通的select与该两个隔离级别下的普通的select都是不加锁读，但只有在事务隔离级别 RC(读取已提交) 和 RR（可重读）下，InnoDB 才会使用一致性非锁定读： 并且：普通的 select 语句是不会对记录加锁的但是串行化隔离级别会 **")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240225162843214.png",alt:"image-20240225162843214"}})]),t._v(" "),s("ul",[s("li",[t._v("在 RC 级别下，对于快照数据，一致性非锁定读总是读取被锁定行的最新一份快照数据。")]),t._v(" "),s("li",[t._v("在 RR 级别下，对于快照数据，一致性非锁定读总是读取本事务开始时的行数据版本。")])]),t._v(" "),s("p",[t._v("快照读比较适合对于数据一致性要求不是特别高且追求极致性能的业务场景。")]),t._v(" "),s("p",[s("strong",[t._v("当前读")]),t._v(" （一致性锁定读）就是给行记录加 X 锁或 S 锁。")]),t._v(" "),s("p",[t._v("当前读的一些常见 SQL 语句类型如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对读的记录加一个X锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对读的记录加一个S锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对读的记录加一个S锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对修改的记录加一个X锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h2",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),s("p",[t._v("其实现主要包括三个部分：隐藏字段，undolog，readview。")]),t._v(" "),s("h3",{attrs:{id:"隐藏字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏字段"}},[t._v("#")]),t._v(" 隐藏字段")]),t._v(" "),s("p",[t._v("trx_id : 最近修改该记录的事务id，作用是与readview一起参与可见性算法的运算，决定要读哪一个版本。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240301123705235.png",alt:"image-20240301123705235"}})]),t._v(" "),s("h3",{attrs:{id:"undolog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undolog"}},[t._v("#")]),t._v(" undolog")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240301123915520.png",alt:"image-20240301123915520"}})]),t._v(" "),s("p",[s("strong",[t._v("对记录的修改操作都会记录其历史版本到redolog中形成一个版本链。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240301124000808.png",alt:"image-20240301124000808"}})]),t._v(" "),s("h3",{attrs:{id:"readview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readview"}},[t._v("#")]),t._v(" readview")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240301123846990.png",alt:"image-20240301123846990"}})]),t._v(" "),s("p",[t._v("使用隐藏字段，与readview再根据可见性算法来确定读哪一个版本，可见性算法如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240301123818513.png",alt:"image-20240301123818513"}})]),t._v(" "),s("h2",{attrs:{id:"工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),s("p",[t._v("读取数据的时候会遍历版本链，根据可见性算法找到可以读取到的数据，"),s("strong",[t._v("每个版本的记录中参与可见性算法运算的就是trx_id （最近修改记录的事务id）")])]),t._v(" "),s("p",[s("strong",[t._v("一条记录的版本链值存在一个，不同的事务根据自己生成的readview ，然后遍历版本链根据可见性算法来读取自己可以读取的历史版本。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20240307170603434.png",alt:"image-20240307170603434"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);