(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{369:function(n,t,e){"use strict";e.r(t);var i=e(4),l=Object(i.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v(" /**\n * 翻转链表非递归\n */\npublic ListNode q1(ListNode head){\n      ListNode left =null;\n      ListNode right =head;\n      ListNode right2=head;\n\n      while(right!=null){\n          right2 = right.next;\n          right.next = left;\n          left = right;\n          right = right2;\n\n      }\n\n      return left;\n\n}\n\n\n/**\n * 递归         先深入到底，再逆方向操作\n */\n\npublic ListNode q2(ListNode head){\n\n    if(head==null || head.next==null){\n      return head;\n    }\n    ListNode newHead = q2(head.next);\n    head.next.next = head;\n    head.next = null;\n\n    return newHead;\n}\n\npublic class ListNode {\n    int val;\n    ListNode next;\n    ListNode() {}\n    ListNode(int val) { this.val = val; }\n    ListNode(int val,  ListNode next) { this.val = val; this.next = next; }\n}\n")])])])])}),[],!1,null,null,null);t.default=l.exports}}]);