(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{370:function(t,a,s){"use strict";s.r(a);var r=s(4),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"算法刷题思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法刷题思想"}},[t._v("#")]),t._v(" 算法刷题思想")]),t._v(" "),a("h2",{attrs:{id:"去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去重"}},[t._v("#")]),t._v(" 去重")]),t._v(" "),a("h3",{attrs:{id:"哈希保存元素状态法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哈希保存元素状态法"}},[t._v("#")]),t._v(" 哈希保存元素状态法")]),t._v(" "),a("p",[t._v("通过哈希表存储已经出现过的元素")]),t._v(" "),a("h3",{attrs:{id:"双指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[t._v("#")]),t._v(" 双指针")]),t._v(" "),a("p",[t._v("先排序，再基于排序的基础上按照具体情况进行去重 如三数之和，以及回溯中需要去重的题")]),t._v(" "),a("h2",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),a("p",[t._v("在向下的过程中把问题解决，还是在回退的过程中把问题解决，注意与回溯的联系，进行对比")]),t._v(" "),a("p",[t._v("快速排序                            反转链表                                   全排列")]),t._v(" "),a("p",[t._v("基本就是处理逻辑是在递归代码前还是后")]),t._v(" "),a("h3",{attrs:{id:"无返回值的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无返回值的"}},[t._v("#")]),t._v(" 无返回值的")]),t._v(" "),a("h3",{attrs:{id:"有返回值的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有返回值的"}},[t._v("#")]),t._v(" 有返回值的")])])}),[],!1,null,null,null);a.default=e.exports}}]);