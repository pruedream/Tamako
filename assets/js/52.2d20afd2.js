(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{380:function(e,t,n){"use strict";n.r(t);var s=n(4),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"linklist双端队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linklist双端队列"}},[e._v("#")]),e._v(" LinkLIst双端队列")]),e._v(" "),t("p",[e._v("常用LinkedList来模拟链式队列， 其本身是一个用双向链表模拟的双向队列")]),e._v(" "),t("p",[e._v("头-----------尾")]),e._v(" "),t("p",[e._v("增加：\nadd(E e)：在链表后添加一个元素；   通用方法\naddFirst(E e)：在链表头部插入一个元素；  特有方法\naddLast(E e)：在链表尾部添加一个元素；  特有方法\npush(E e)：与addFirst方法一致"),t("br"),e._v("\noffer(E e)：在链表尾部插入一个元素                                                                                                                                                  add(int index, E element)：在指定位置插入一个元素。"),t("br"),e._v("\nofferFirst(E e)：JDK1.6版本之后，在头部添加； 特有方法                                                                                                         offerLast(E e)：JDK1.6版本之后，在尾部添加； 特有方法")]),e._v(" "),t("p",[e._v("删除：\nremove() ：移除链表中第一个元素;    通用方法"),t("br"),e._v("\nremove(E e)：移除指定元素；   通用方法\nremoveFirst(E e)：删除头，获取元素并删除；  特有方法\nremoveLast(E e)：删除尾；  特有方法\npollFirst()：删除头；  特有方法\npollLast()：删除尾；  特有方法\npop()：和removeFirst方法一致，删除头。\npoll()：查询并移除第一个元素     特有方法")]),e._v(" "),t("p",[e._v("查：\nget(int index)：按照下标获取元素；  通用方法\ngetFirst()：获取第一个元素；  特有方法\ngetLast()：获取最后一个元素； 特有方法\npeek()：获取第一个元素，但是不移除；  特有方法\npeekFirst()：获取第一个元素，但是不移除；\npeekLast()：获取最后一个元素，但是不移除；\npollFirst()：查询并删除头；  特有方法\npollLast()：删除尾；  特有方法\npoll()：查询并移除第一个元素     特有方法")])])}),[],!1,null,null,null);t.default=r.exports}}]);