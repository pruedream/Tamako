(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{387:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mybatis-plus-实现多租户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus-实现多租户"}},[t._v("#")]),t._v(" Mybatis-plus 实现多租户")]),t._v(" "),s("h2",{attrs:{id:"什么是saas系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是saas系统"}},[t._v("#")]),t._v(" 什么是Saas系统")]),t._v(" "),s("p",[s("strong",[t._v("SaaS强调软件即服务，传统的软件是需要我们购买然后下载到自己本地来使用，而SaaS不需要用户进行相关软硬件资源的准备，只需要购买该服务的使用权就可以通过互联网使用系统。")]),t._v(" SaaS提供商为企业搭建信息化所需要的所有网络基础设施及软件、硬件运作平台，并负责所有前期的实施、后期的维护等一系列服务，租户(企业)无需购买软硬件、建设机房、招聘IT人员，即可通过互联网使用信息系统。")]),t._v(" "),s("h2",{attrs:{id:"多租户数据隔离架构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多租户数据隔离架构设计"}},[t._v("#")]),t._v(" 多租户数据隔离架构设计")]),t._v(" "),s("p",[t._v("目前saas多租户系统的数据隔离有三种架构设计，即为每个租户提供独立的数据库、独立的表空间、按字段区分租户，每种方案都有其各自的适用情况。")]),t._v(" "),s("p",[s("strong",[t._v("一个租户独立一个数据库")])]),t._v(" "),s("p",[t._v("一个租户独立使用一个数据库，那就意味着我们的SaaS系统需要连接多个数据库，这种实现方案其实就和分库分表架构设计是一样的，好处就是数据隔离级别高、安全性好，毕竟一个租户单用一个数据库，但是物理硬件成本，维护成本也变高了。")]),t._v(" "),s("p",[s("strong",[t._v("独立的表空间")])]),t._v(" "),s("p",[t._v("这种方案的实现方式，就是所有租户共用一个数据库系统，但是每个租户在数据库系统中拥有一个独立的表空间。")]),t._v(" "),s("p",[s("strong",[t._v("按租户id字段隔离租户")])]),t._v(" "),s("p",[t._v("这种方案是多租户方案中最简单的数据隔离方法，即在"),s("strong",[t._v("每张表中都添加一个用于区分租户的字段（如tenant_id或org_id啥的）来标识每条数据属于哪个租户，当进行查询的时候每条语句都要添加该字段作为过滤条件")]),t._v("，其特点是所有租户的数据全都存放在同一个表中，数据的隔离性是最低的，完全是通过字段来区分的，很容易把数据搞串或者误操作。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("隔离方案")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("成本")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("支持租户数量")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("优点")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("缺点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("独立数据库系统")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("少")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据隔离级别高，安全性，可以针对单个租户开发个性化需求")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据库独立安装，物理成本和维护成本都比较高")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("独立的表空间")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("中")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("较多")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("提供了一定程度的逻辑数据隔离，一个数据库系统可支持多个租户")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数据库管理比较困难，表繁多，同时数据修复稍复杂")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按租户id字段区分")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("多")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("维护和购置成本最低，每个数据库能够支持的租户数量最多")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("隔离级别最低，安全性也最低")])])])]),t._v(" "),s("h2",{attrs:{id:"mybatis-plus优雅实现多租户数据隔离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus优雅实现多租户数据隔离"}},[t._v("#")]),t._v(" mybatis-plus优雅实现多租户数据隔离")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantLineHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 获取租户 ID 值表达式，只支持单个 ID 值\n     * <p>\n     *\n     * @return 租户 ID 值表达式\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Expression")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTenantId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 获取租户字段名\n     * <p>\n     * 默认字段名叫: tenant_id\n     *\n     * @return 租户字段名\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTenantIdColumn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果该字段你不是固定的，请使用 SqlInjectionUtils.check 检查安全性")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tenant_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 根据表名判断是否忽略拼接多租户条件\n     * <p>\n     * 默认都要进行解析并拼接多租户条件\n     *\n     * @param tableName 表名\n     * @return 是否忽略, true:表示忽略，false:需要解析并拼接多租户条件\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignoreTable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" tableName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br")])]),s("p",[t._v("多租户插件其实就是通过解析SQL，然后进行拼接多租户id过滤条件来实现SQL增强从而做到数据隔离，")])])}),[],!1,null,null,null);s.default=e.exports}}]);