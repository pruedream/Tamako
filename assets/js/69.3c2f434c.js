(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{395:function(t,a,s){"use strict";s.r(a);var n=s(4),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"请求的body-请求体-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求的body-请求体-类型"}},[t._v("#")]),t._v(" 请求的body（请求体）类型")]),t._v(" "),a("p",[t._v("body的类型主要由四种类型的参数: form-data、x-www-form-urlencoded、raw、binary，如图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/pruedream/PictureBed@main/image/1919136-20210421113824932-441377747.png",alt:"img"}})]),t._v(" "),a("p",[t._v("由于post请求的参数才放到请求体(Body)里面，get的请求参数一般都直接跟在url后面，所以这里Body里面参数都是指的post请求参数，以下对Body的类型进行介绍。")]),t._v(" "),a("h2",{attrs:{id:"form-data-multipart-form-data-支持上传文件的表单类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form-data-multipart-form-data-支持上传文件的表单类型"}},[t._v("#")]),t._v(" form-data(multipart/form-data)，支持上传文件的表单类型")]),t._v(" "),a("p",[t._v("form-data对应着http请求中的Content-Type=multipart/form-data, 一般在表单中如果需要进行文件上传时，就需要使用该格式。")]),t._v(" "),a("p",[t._v("它会将表单的数据处理为一条消息，以标签为单元，用分隔符分开。既可以上传键值对，也可以上传文件File。当上传的字段是文件时，会有Content-Type来说明文件类型；content-disposition用来说明一些字段信息；")]),t._v(" "),a("p",[t._v("由于有boundary隔离，所以multipart/form-data既可以上传文件，也可以上传键值对，它采用了键值对的方式，所以"),a("strong",[t._v("可以上传多个文件")])]),t._v(" "),a("p",[t._v("下图是fiddler抓包得到的某系统一个更新头像的接口，在这里我们可以看到Content-Type: multipart/form-data; boundary=---------------------------21317247322879，所以提交的参数文件是以分隔符---------------------------21317247322879来隔开的，以")]),t._v(" "),a("p",[t._v("-----------------------------21317247322879-----来结束的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/1919136-20210421105750803-1931087266.png",alt:"img"}})]),t._v(" "),a("p",[t._v("如图所示，postman里面对该接口进行测试时参数Body里面选择的就是form-data格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/1919136-20210421112927500-46685808.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"x-www-form-urlencoded-表单类型的接口请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-www-form-urlencoded-表单类型的接口请求"}},[t._v("#")]),t._v(" "),a("strong",[t._v("x-www-form-urlencoded，表单类型的接口请求")])]),t._v(" "),a("p",[t._v("对应着http请求中的Content-Type为application/x-www-from-urlencoded,会将表单内的数据转换为键值对，比如,name=python&age = 22，这种方式"),a("strong",[t._v("只能以键值对形式发送参数")]),t._v("，一般如果不指定content-type，默认便是application/x-www-form-urlencoded，")]),t._v(" "),a("p",[t._v("如b站的注册接口采用的就是这种方式发送消息，如下图，通过抓包获取到Content-Type为application/x-www-from-urlencoded，参数数据就是以键值对的形式发送的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/pruedream/PictureBed@main/image/1919136-20210421103344685-1844188846.png",alt:"img"}})]),t._v(" "),a("p",[t._v("则接口测试时选择参数类型为x-www-from-urlencoded，如下所示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/1919136-20210421100410000-2129224229.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"raw-支持各种原生的类型-json类型的接口请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raw-支持各种原生的类型-json类型的接口请求"}},[t._v("#")]),t._v(" "),a("strong",[t._v("raw（支持各种原生的类型，JSON类型的接口请求）")])]),t._v(" "),a("p",[t._v("如：Content-Type=application/json时，则可以使用这种方式，这个是实际接口测试中，使用到最多的方式了。越来越多的人把它作为请求头，用来告诉服务端消息主体是序列化后的 JSON 字符串")]),t._v(" "),a("p",[t._v("他是"),a("strong",[t._v("可以上传任意格式的参数")]),t._v("，可以上传text、json、xml、html、js"),a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/1919136-20210421102414407-424087404.png",alt:"img"}})]),t._v(" "),a("p",[t._v("如图某系统登录接口的就是以application/json格式提交参数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/pruedream/PictureBed@main/image/1919136-20210421105124932-753350978.png",alt:"img"}})]),t._v(" "),a("p",[t._v("所以postman里面进行接口测试时Body就是选择raw下面的json格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/1919136-20210421105402876-1556897703.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"binary-二进制-流类型的接口请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#binary-二进制-流类型的接口请求"}},[t._v("#")]),t._v(" binary（二进制，流类型的接口请求 ）")]),t._v(" "),a("p",[t._v("对应着http请求中的Content-Type:application/octet-stream，只可以上传二进制数据，通常用来上传文件，由于没有键值，所以，"),a("strong",[t._v("一次只能上传一个文件")])]),t._v(" "),a("h2",{attrs:{id:"开发中获取参数的几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发中获取参数的几种方式"}},[t._v("#")]),t._v(" 开发中获取参数的几种方式")]),t._v(" "),a("p",[a("strong",[t._v("@PathVariable获取URL路径中的参数")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{jk}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" cv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequest")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletResponse")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        shortLinkService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("restoreUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n请求格式为：\thttp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5173")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XXX")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("strong",[t._v("@RequestParam获取请求体中的表单参数，url的请求参数，文件。")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bnn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"56"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n请求格式为：http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8005")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[a("strong",[t._v("@RequestPart 注解是Spring 中用来处理multipart/form-data 类型的请求的注解，它用于将请求中的文件和表单数据封装成对象")]),t._v("：multipart/form-data既可以上传键值对，也可以上传文件File，键值对可以设置自己的单独的content-type，下图展示使用multipart/form-data 类型来同时上传文件的json参数。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestPart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MultipartFile")]),t._v(" files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestPart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dto"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kkk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n 请求格式为：http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8005")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello  下图是请求体\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20231223204038401.png",alt:"image-20231223204038401"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/pruedream/PictureBed/main/image/image-20231214152013732.png",alt:"image-20231214152013732"}})]),t._v(" "),a("p",[a("strong",[t._v("@RequestBody 只能接受application/josn  获取请求体中的JSON参数")])]),t._v(" "),a("p",[t._v("参考")]),t._v(" "),a("ul",[a("li",[t._v("https://www.cnblogs.com/xnancy/p/14682210.html")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/zuocheng217/article/details/121556700")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/qq_43655835/article/details/119610609")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/weixin_39736281/article/details/119136126")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/lovezhuer1/article/details/122436791")])])])}),[],!1,null,null,null);a.default=r.exports}}]);